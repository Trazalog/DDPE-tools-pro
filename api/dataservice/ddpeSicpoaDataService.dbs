<data enableBatchRequests="true" enableBoxcarring="true" name="ddpeSicpoaDataService" transports="http https local">
   <config enableOData="false" id="SICPOADataSource">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="setInspeccion" useConfig="SICPOADataSource">
      <sql>INSERT INTO sicpoa.inspecciones (&#xd;	case_id,&#xd;	patente_tractor,&#xd;	nro_senasa,&#xd;	productos,&#xd;	reprecintado,&#xd;	bruto,&#xd;	tara,&#xd;	ticket,&#xd;	resultado,&#xd;	cant_fajas,&#xd;	bruto_reprecintado,&#xd;	ticket_reprecintado,&#xd;	usuario_app,&#xd;	petr_id,&#xd;	chof_id,&#xd;	inca_id,&#xd;	observaciones,&#xd;	info_id_doc,&#xd;	tel_transportista,&#xd;	email_transportista,&#xd;	se_constituye,&#xd;	domicilio_constituye,&#xd;	propiedad_de,&#xd;	atendidos_por,&#xd;	caracter_de,&#xd;	proceden_a,&#xd;	departamento,&#xd;	inspectores,&#xd;	localidad&#xd;) &#xd;SELECT cast (:case_id AS INTEGER ),&#xd;	:patente_tractor,&#xd;	:nro_senasa,&#xd;	:productos,&#xd;	CAST ( :reprecintado AS BOOLEAN ),&#xd;	case when param.bruto IS NULL OR param.bruto = '' then null ELSE CAST ( param.bruto AS FLOAT ) END,&#xd;	case when param.tara IS NULL OR param.tara = '' then NULL ELSE CAST ( param.tara AS FLOAT ) END,&#xd;    :ticket,&#xd;    :resultado,&#xd;    case when param.cant_fajas IS null or param.cant_fajas = '' then null ELSE CAST ( param.cant_fajas AS INTEGER ) END,&#xd;    case when param.bruto_reprecintado IS NULL OR param.bruto_reprecintado = '' then NULL ELSE CAST ( param.bruto_reprecintado AS FLOAT ) END,&#xd;    :ticket_reprecintado,&#xd;    :usuario_app,&#xd;    CAST ( :petr_id AS INTEGER ),&#xd;    CAST ( :chof_id AS INTEGER ),&#xd;    case when param.inca_id is null or param.inca_id = '' then NULL ELSE CAST ( param.inca_id AS INTEGER ) END,&#xd;    :observaciones,&#xd;    case when param.info_id_doc IS NULL OR param.info_id_doc = '' then null else CAST ( param.info_id_doc AS INTEGER ) END,&#xd;    :tel_transportista,&#xd;    :email_transportista,&#xd;    :se_constituye,&#xd;    :domicilio_constituye,&#xd;    :propiedad_de,&#xd;    :atendidos_por,&#xd;    :caracter_de,&#xd;    :proceden_a,&#xd;    case when param.departamento is null or param.departamento = '' then null else param.departamento end,&#xd;    :inspectores,		&#xd;    :localidad&#xd;    FROM&#xd;    ( SELECT :bruto bruto, :tara tara, :bruto_reprecintado bruto_reprecintado, :inca_id inca_id,:cant_fajas cant_fajas,:info_id_doc info_id_doc, :departamento departamento) param &#xd;   ON conflict ( case_id ) DO&#xd;        UPDATE &#xd;            SET patente_tractor = excluded.patente_tractor,&#xd;            nro_senasa = excluded.nro_senasa,&#xd;            productos = excluded.productos,&#xd;            reprecintado = CAST ( excluded.reprecintado AS BOOLEAN ),&#xd;            bruto = CAST ( excluded.bruto AS FLOAT ),&#xd;            tara = CAST ( excluded.tara AS FLOAT ),&#xd;            ticket = excluded.ticket,&#xd;            resultado = excluded.resultado,&#xd;            cant_fajas = CAST ( excluded.cant_fajas AS INTEGER ),&#xd;            bruto_reprecintado = CAST ( excluded.bruto_reprecintado AS FLOAT ),&#xd;            ticket_reprecintado = excluded.ticket_reprecintado,&#xd;            usuario_app = excluded.usuario_app,&#xd;            petr_id = CAST ( excluded.petr_id AS INTEGER ),&#xd;            chof_id = excluded.chof_id,&#xd;            inca_id = excluded.inca_id,&#xd;            observaciones = excluded.observaciones,&#xd;            info_id_doc = excluded.info_id_doc,&#xd;            tel_transportista = excluded.tel_transportista,&#xd;            email_transportista = excluded.email_transportista,&#xd;            se_constituye = excluded.se_constituye,&#xd;            domicilio_constituye = excluded.domicilio_constituye,&#xd;            propiedad_de = excluded.propiedad_de,&#xd;            atendidos_por = excluded.atendidos_por,&#xd;            caracter_de = excluded.caracter_de,&#xd;            proceden_a = excluded.proceden_a,&#xd;            departamento = excluded.departamento,&#xd;            localidad = excluded.localidad,&#xd;            inspectores = excluded.inspectores</sql>
      <param name="case_id" sqlType="STRING"/>
      <param name="patente_tractor" sqlType="STRING"/>
      <param name="nro_senasa" sqlType="STRING"/>
      <param name="productos" sqlType="STRING"/>
      <param name="reprecintado" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="ticket" sqlType="STRING"/>
      <param name="resultado" sqlType="STRING"/>
      <param name="cant_fajas" sqlType="STRING"/>
      <param name="bruto_reprecintado" sqlType="STRING"/>
      <param name="ticket_reprecintado" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="petr_id" sqlType="STRING"/>
      <param name="chof_id" sqlType="STRING"/>
      <param name="inca_id" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
      <param name="info_id_doc" sqlType="STRING"/>
      <param name="tel_transportista" sqlType="STRING"/>
      <param name="email_transportista" sqlType="STRING"/>
      <param name="se_constituye" sqlType="STRING"/>
      <param name="domicilio_constituye" sqlType="STRING"/>
      <param name="propiedad_de" sqlType="STRING"/>
      <param name="atendidos_por" sqlType="STRING"/>
      <param name="caracter_de" sqlType="STRING"/>
      <param name="proceden_a" sqlType="STRING"/>
      <param name="departamento" sqlType="STRING"/>
      <param name="localidad" sqlType="STRING"/>
      <param name="inspectores" sqlType="STRING"/>
   </query>
   <query id="getInspeccion" useConfig="SICPOADataSource">
      <sql>select &#xd;case_id&#xd;,patente_tractor&#xd;,nro_senasa&#xd;,productos&#xd;,reprecintado&#xd;,bruto&#xd;,tara&#xd;,ticket&#xd;,resultado&#xd;,cant_fajas&#xd;,bruto_reprecintado&#xd;,ticket_reprecintado&#xd;,to_char( i.fec_alta, 'YYYY-MM-DD HH24:MI') fec_alta&#xd;,i.usuario&#xd;,i.usuario_app&#xd;,petr_id&#xd;,chof_id&#xd;,c.nombre chofer&#xd;,inca_id&#xd;,inf.valor4_base64 foto_infraccion_calle&#xd;,observaciones&#xd;,info_id_doc&#xd;,tel_transportista&#xd;,email_transportista&#xd;,se_constituye&#xd;,domicilio_constituye&#xd;,propiedad_de &#xd;,atendidos_por &#xd;,caracter_de &#xd;,proceden_a &#xd;,localidad &#xd;,inspectores&#xd;,(select t.descripcion from core.tablas t where t.tabl_id = i.departamento) departamento&#xd;,departamento depa_id&#xd;from sicpoa.inspecciones i&#xd;left join frm.instancias_formularios inf on inf.inst_id = i.inca_id &#xd;, sicpoa.choferes c&#xd;where i.case_id = cast(:case_id as integer)&#xd;and i.chof_id = c.dni&#xd;and i.eliminado = false</sql>
      <result outputType="json">{&#xd;    "inspeccion":{&#xd;       "case_id":"$case_id",&#xd;       "patente_tractor":"$patente_tractor",&#xd;       "nro_senasa":"$nro_senasa",&#xd;       "productos":"$productos",&#xd;       "reprecintado":"$reprecintado",&#xd;       "bruto":"$bruto",&#xd;       "tara":"$tara",&#xd;       "ticket":"$ticket",&#xd;       "resultado":"$resultado",&#xd;       "cant_fajas":"$cant_fajas",&#xd;       "bruto_reprecintado":"$bruto_reprecintado",&#xd;       "ticket_reprecintado":"$ticket_reprecintado",&#xd;       "fec_alta":"$fec_alta",&#xd;       "usuario":"$usuario",&#xd;       "usuario_app":"$usuario_app",&#xd;       "petr_id":"$petr_id",&#xd;       "chof_id":"$chof_id",&#xd;       "chofer":"$chofer",&#xd;       "inca_id":"$inca_id",&#xd;       "foto_infraccion_calle":"$foto_infraccion_calle",&#xd;       "info_id_doc":"$info_id_doc",&#xd;       "observaciones":"$observaciones",&#xd;       "tel_transportista":"$tel_transportista",&#xd;       "email_transportista":"$email_transportista",&#xd;       "se_constituye":"$se_constituye",&#xd;       "domicilio_constituye":"$domicilio_constituye",&#xd;       "propiedad_de":"$propiedad_de",&#xd;       "atendidos_por":"$atendidos_por",&#xd;       "caracter_de":"$caracter_de",&#xd;       "proceden_a":"$proceden_a",&#xd;       "localidad":"$localidad",&#xd;       "departamento":"$departamento",&#xd;       "depa_id":"$depa_id",&#xd;       "inspectores":"$inspectores",&#xd;       "@getPermisosTransito":"$case_id-&gt;case_id",      &#xd;       "@getInfracciones":"$case_id-&gt;case_id",&#xd;       "@getEmpresasInspeccion":"$case_id-&gt;case_id",&#xd;       "@getTermicosInspeccion":"$case_id-&gt;case_id",&#xd;       "@getDocumentosInspeccion":"$case_id-&gt;case_id"&#xd;    }&#xd; }</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="getPermisosTransito" useConfig="SICPOADataSource">
      <sql>select pt.perm_id&#xd;,pt.lugar_emision&#xd;,to_char(pt.fecha_hora_salida,'yyyy-mm-dd hh24:mi') fecha_hora_salida&#xd;,pt.tipo&#xd;,to_char(pt.fec_alta,'yyyy-mm-dd hh24:mi') fec_alta&#xd;,pt.usuario&#xd;,pt.usuario_app&#xd;,pt.soli_num &#xd;,pt.origen&#xd;,e.razon_social &#xd;,e.num_establecimiento&#xd;,pt.neto &#xd;,pt.bruto &#xd;,pt.temperatura &#xd;,pt.productos &#xd;from sicpoa.permisos_transito pt &#xd;left join sicpoa.empresas e on pt.origen = e.cuit&#xd;where pt.case_id = cast(:case_id as integer)</sql>
      <result outputType="json">{&#xd;    "permisos_transito":{&#xd;       "permiso_transito":[&#xd;          {&#xd;            "perm_id":"$perm_id",&#xd;            "lugar_emision":"$lugar_emision",&#xd;            "fecha_hora_salida":"$fecha_hora_salida",&#xd;            "tipo":"$tipo",&#xd;            "fec_alta":"$fec_alta",&#xd;            "usuario":"$usuario",&#xd;            "usuario_app":"$usuario_app",&#xd;            "soli_num": "$soli_num",&#xd;            "origen": "$origen",&#xd;            "origen_nom": "$razon_social",&#xd;            "origen_num": "$num_establecimiento",&#xd;            "neto": "$neto",&#xd;            "bruto": "$bruto",&#xd;            "temperatura": "$temperatura",&#xd;            "productos": "$productos"&#xd;          }&#xd;       ]&#xd;    }&#xd; }</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="getInfracciones" useConfig="SICPOADataSource">
      <sql>select &#xd;to_char(i.fec_alta,'yyyy-mm-dd hh24:mi') fec_alta &#xd;,i.usuario&#xd;,i.usuario_app&#xd;,i.case_id&#xd;,i.depositario &#xd;,i.documento &#xd;,i.domicilio_legal &#xd;,i.domicilio_comercial &#xd;,i.telefono &#xd;,i.temperatura_actual &#xd;,i.email &#xd;,i.detalle_infraccion &#xd;,i.caracteristicas_organolepticas &#xd;,i.caracteristicas_deposito &#xd;,i.tipo_camara&#xd;from sicpoa.infracciones i &#xd;where i.case_id = cast (:case_id as integer)</sql>
      <result outputType="json">{&#xd;	"infracciones": {&#xd;		"infraccion": {&#xd;			"fec_alta": "$fec_alta",&#xd;			"usuario": "$usuario",&#xd;			"usuario_app": "$usuario_app",&#xd;			"case_id": "$case_id",&#xd;			"depositario": "$depositario",&#xd;			"documento": "$documento",&#xd;			"domicilio_legal": "$domicilio_legal",&#xd;			"domicilio_comercial": "$domicilio_comercial",&#xd;			"telefono": "$telefono",&#xd;			"temperatura_actual": "$temperatura_actual",&#xd;			"email": "$email",&#xd;			"detalle_infraccion": "$detalle_infraccion",&#xd;			"caracteristicas_organolepticas": "$caracteristicas_organolepticas",&#xd;			"caracteristicas_deposito": "$caracteristicas_deposito",&#xd;			"tipo_camara": "$tipo_camara",&#xd;			"@getDetalleInfraccion": "$case_id-&gt;case_id"&#xd;		}&#xd;	}&#xd;}</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="getChofer" useConfig="SICPOADataSource">
      <sql>select &#xd;dni&#xd;,nombre&#xd;,fec_alta&#xd;,usuario&#xd;,usuario_app&#xd;from sicpoa.choferes c &#xd;where c.dni = :chof_id</sql>
      <result outputType="json">{&#xd;   "chofer":{&#xd;            "dni":"$dni",&#xd;            "nombre":"$nombre",&#xd;            "fec_alta":"$fec_alta",&#xd;            "usuario":"$usuario",&#xd;            "usuario_app":"$usuario_app"&#xd;   }&#xd;}</result>
      <param name="chof_id" sqlType="STRING"/>
   </query>
   <query id="getEmpresasInspeccion" useConfig="SICPOADataSource">
      <sql>select &#xd;ie.rol &#xd;,e.cuit&#xd;,e.razon_social &#xd;,e.num_establecimiento&#xd;,d.calle &#xd;,d.altura &#xd;,d.depa_id&#xd;,d.depo_id&#xd;,t.valor departamento&#xd;,ie.productos &#xd;from sicpoa.inspecciones_empresas ie &#xd;join sicpoa.empresas e on ie.empr_id = e.cuit &#xd;left join sicpoa.depositos d on ie.depo_id = d.depo_id&#xd;left join core.tablas t on d.depa_id = t.tabl_id &#xd;where ie.case_id = cast(:case_id as integer)</sql>
      <result outputType="json">{&#xd;   "empresas":{&#xd;      "empresa":[&#xd;         {&#xd;            "rol":"$rol",&#xd;            "cuit":"$cuit",&#xd;            "razon_social":"$razon_social",&#xd;            "num_establecimiento":"$num_establecimiento",&#xd;            "depo_id":"$depo_id",&#xd;            "calle":"$calle",&#xd;            "altura":"$altura",&#xd;            "depa_id":"$depa_id",&#xd;            "departamento":"$departamento",&#xd;            "productos":"$productos",&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="getTermicosInspeccion" useConfig="SICPOADataSource">
      <sql>select &#xd;t.patente &#xd;,it.precintos &#xd;,it.nro_senasa &#xd;from sicpoa.inspecciones_termicos it &#xd;join sicpoa.termicos t on it.term_id = t.patente &#xd;and it.case_id = cast(:case_id as integer)</sql>
      <result outputType="json">{&#xd;   "termicos":{&#xd;      "termico":[&#xd;         {&#xd;            "patente":"$patente",&#xd;            "precintos":"$precintos",&#xd;            "nro_senasa":"$nro_senasa"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="setInfraccionInspeccion" useConfig="SICPOADataSource">
      <sql>insert into&#xd;	sicpoa.infracciones (&#xd;	usuario_app,&#xd;	case_id,&#xd;	depositario,&#xd;	documento,&#xd;	domicilio_legal,&#xd;	domicilio_comercial,&#xd;	telefono,&#xd;	email,&#xd;	detalle_infraccion,&#xd;	caracteristicas_organolepticas,&#xd;	caracteristicas_deposito,&#xd;	tipo_camara,&#xd;	temperatura_actual,&#xd;	fecha_hora)&#xd;values(&#xd;	:usuario_app,&#xd;	cast(:case_id as integer),&#xd;	:depositario,&#xd;	:documento,&#xd;	:domicilio_legal,&#xd;	:domicilio_comercial,&#xd;	:telefono,&#xd;	:email,&#xd;	:detalle_infraccion,&#xd;	:caracteristicas_organolepticas,&#xd;	:caracteristicas_deposito,&#xd;	:tipo_camara,&#xd;	cast(:temperatura_actual as float),&#xd;	to_timestamp(cast(:fecha_hora as text),'YYYY-MM-DD HH24:MI:SS')&#xd;);</sql>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="case_id" sqlType="STRING"/>
      <param name="depositario" sqlType="STRING"/>
      <param name="documento" sqlType="STRING"/>
      <param name="domicilio_legal" sqlType="STRING"/>
      <param name="domicilio_comercial" sqlType="STRING"/>
      <param name="telefono" sqlType="STRING"/>
      <param name="email" sqlType="STRING"/>
      <param name="detalle_infraccion" sqlType="STRING"/>
      <param name="caracteristicas_organolepticas" sqlType="STRING"/>
      <param name="caracteristicas_deposito" sqlType="STRING"/>
      <param name="tipo_camara" sqlType="STRING"/>
      <param name="temperatura_actual" sqlType="STRING"/>
      <param name="fecha_hora" sqlType="STRING"/>
   </query>
   <query id="setPermisosInspeccion" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.permisos_transito (perm_id,&#xd;	lugar_emision,&#xd;	fecha_hora_salida,&#xd;	tipo,&#xd;	usuario_app,&#xd;	case_id,&#xd;    soli_num,&#xd;    origen,&#xd;    neto,&#xd;    bruto,&#xd;    temperatura,&#xd;    productos)&#xd;values(:perm_id,&#xd;	:lugar_emision,&#xd;	to_timestamp(:fecha_hora_salida,'YYYY-MM-DD HH24:MI'),&#xd;	:tipo,&#xd;	:usuario_app,&#xd;	cast(:case_id as integer),&#xd;    :soli_num,&#xd;    :origen,&#xd;    :neto,&#xd;    :bruto,&#xd;    cast(:temperatura as float),&#xd;    :productos);</sql>
      <param name="perm_id" sqlType="STRING"/>
      <param name="lugar_emision" sqlType="STRING"/>
      <param name="fecha_hora_salida" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="case_id" sqlType="STRING"/>
      <param name="soli_num" sqlType="STRING"/>
      <param name="origen" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="temperatura" sqlType="STRING"/>
      <param name="productos" sqlType="STRING"/>
   </query>
   <query id="deletePermisoInspeccion" useConfig="SICPOADataSource">
      <sql>delete from sicpoa.permisos_transito&#xd;WHERE case_id=cast(:case_id as integer) ;</sql>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="setEmpresaInspeccion" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.inspecciones_empresas (rol,&#xd;	empr_id,&#xd;	case_id,&#xd;	usuario_app,&#xd;	productos,&#xd;	depo_id)&#xd;select&#xd;	:rol,&#xd;	:empr_id,&#xd;	cast(:case_id as integer),&#xd;	:usuario_app,&#xd;	:productos,&#xd;	case&#xd;		when param.depo_id is null&#xd;		or param.depo_id = '' then null&#xd;		else cast(param.depo_id as integer) end&#xd;from (select	:depo_id depo_id) param ;</sql>
      <param name="rol" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="case_id" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="depo_id" sqlType="STRING"/>
      <param name="productos" sqlType="STRING"/>
   </query>
   <query id="deleteEmpresaInspeccion" useConfig="SICPOADataSource">
      <sql>delete from sicpoa.inspecciones_empresas&#xd;WHERE case_id = cast(:case_id as integer)</sql>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="setTermicoInspeccion" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.inspecciones_termicos (&#xd;	precintos,&#xd;	usuario_app,&#xd;	case_id,&#xd;	term_id,&#xd;	nro_senasa)&#xd;values(&#xd;	:precintos,&#xd;	:usuario_app,&#xd;	cast( :case_id as integer),&#xd;	:term_id,&#xd;	:nro_senasa);</sql>
      <param name="precintos" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="case_id" sqlType="STRING"/>
      <param name="term_id" sqlType="STRING"/>
      <param name="nro_senasa" sqlType="STRING"/>
   </query>
   <query id="getEmpresasXPatron" useConfig="SICPOADataSource">
      <sql>select *&#xd;from sicpoa.empresas e  &#xd;,(select lower(:patron) patron ) param&#xd;where e.cuit like '%'||param.patron||'%'&#xd;or lower(e.razon_social) like '%'||param.patron||'%'&#xd;or e.num_establecimiento like '%'||param.patron||'%'</sql>
      <result outputType="json">{&#xd;   "empresas":{&#xd;      "empresa":[&#xd;         {&#xd;            "cuit":"$cuit",&#xd;            "razon_social":"$razon_social",&#xd;            "num_establecimiento":"$num_establecimiento"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="patron" sqlType="STRING"/>
   </query>
   <query id="getChoferesXPatron" useConfig="SICPOADataSource">
      <sql>select &#xd;dni&#xd;,nombre&#xd;,fec_alta&#xd;,usuario&#xd;,usuario_app&#xd;from sicpoa.choferes c &#xd;where c.dni like '%'||:patron ||'%'</sql>
      <result outputType="json">{&#xd;   "choferes":{&#xd;      "chofer":[&#xd;         {&#xd;            "dni":"$dni",&#xd;            "nombre":"$nombre",&#xd;            "fec_alta":"$fec_alta",&#xd;            "usuario":"$usuario",&#xd;            "usuario_app":"$usuario_app"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="patron" sqlType="STRING"/>
   </query>
   <query id="getEmpresa" useConfig="SICPOADataSource">
      <sql>select &#xd;e.cuit&#xd;,e.razon_social &#xd;from sicpoa.empresas e &#xd;where e.cuit = :cuit</sql>
      <result outputType="json">{&#xd;   "empresa":{&#xd;            "cuit":"$cuit",&#xd;            "razon_social":"$razon_social"&#xd;   }&#xd;}</result>
      <param name="cuit" sqlType="STRING"/>
   </query>
   <query id="getDepositoXEmpresa" useConfig="SICPOADataSource">
      <sql>select d.*,t.valor departamento&#xd;from sicpoa.depositos d &#xd;,core.tablas t &#xd;where d.empr_id = :empr_id&#xd;and t.tabl_id = d.depa_id &#xd;order by d.calle ,d.altura</sql>
      <result outputType="json">{&#xd;   "depositos":{&#xd;      "deposito":[&#xd;         {&#xd;            "depo_id":"$depo_id",&#xd;            "calle":"$calle",&#xd;            "altura":"$altura",&#xd;            "departamento":"$departamento",&#xd;            "empr_id":"$empr_id"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setDepositoEmpresa" returnGeneratedKeys="true" useConfig="SICPOADataSource">
      <sql>INSERT INTO sicpoa.depositos&#xd;(calle, altura, depa_id, empr_id)&#xd;VALUES(:calle, :altura, :depa_id, :empr_id)</sql>
      <result element="respuesta" rowName="resultado" useColumnNumbers="true">
         <element column="1" name="depo_id" xsdType="integer"/>
      </result>
      <param name="calle" sqlType="STRING"/>
      <param name="altura" sqlType="STRING"/>
      <param name="depa_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="deleteTermicoInspeccion" useConfig="SICPOADataSource">
      <sql>delete from sicpoa.inspecciones_termicos&#xd;WHERE case_id=cast(:case_id as integer)</sql>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="setEmpresa" useConfig="SICPOADataSource">
      <sql>INSERT INTO sicpoa.empresas&#xd;(cuit, razon_social, num_establecimiento, usuario_app)&#xd;VALUES(:cuit, :razon_social, :num_establecimiento, :usuario_app);</sql>
      <param name="cuit" sqlType="STRING"/>
      <param name="razon_social" sqlType="STRING"/>
      <param name="num_establecimiento" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
   </query>
   <query id="setChofer" useConfig="SICPOADataSource">
      <sql>INSERT INTO sicpoa.choferes&#xd;(dni, nombre,  usuario_app)&#xd;VALUES(:dni, :nombre,  :usuario_app)</sql>
      <param name="dni" sqlType="STRING"/>
      <param name="nombre" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
   </query>
   <query id="setTermico" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.termicos (patente,&#xd;	usuario_app)&#xd;values(:patente,&#xd;	:usuario_app);</sql>
      <param name="patente" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
   </query>
   <query id="getInspeccionesXFecha" useConfig="SICPOADataSource">
      <sql>select &#xd;case_id&#xd;,patente_tractor&#xd;,nro_senasa&#xd;,productos&#xd;,reprecintado&#xd;,bruto&#xd;,tara&#xd;,ticket&#xd;,resultado&#xd;,cant_fajas&#xd;,bruto_reprecintado&#xd;,ticket_reprecintado&#xd;,to_char( i.fec_alta, 'YYYY-MM-DD HH24:MI') fec_alta&#xd;,i.usuario&#xd;,i.usuario_app&#xd;,petr_id&#xd;,chof_id&#xd;,c.nombre chofer&#xd;,inca_id&#xd;,inf.valor4_base64 foto_infraccion_calle&#xd;,observaciones&#xd;,info_id_doc&#xd;from sicpoa.inspecciones i&#xd;left join frm.instancias_formularios inf on inf.inst_id = i.inca_id &#xd;, sicpoa.choferes c&#xd;where i.fec_alta between to_date(:fec_desde,'YYYY-MM-DD') and to_date(:fec_hasta,'YYYY-MM-DD')&#xd;and i.chof_id = c.dni</sql>
      <result outputType="json">{&#xd;   "inspecciones":{&#xd;      "inspeccion":[&#xd;         {&#xd;            "case_id":"$case_id",&#xd;            "patente_tractor":"$patente_tractor",&#xd;            "nro_senasa":"$nro_senasa",&#xd;            "productos":"$productos",&#xd;            "reprecintado":"$reprecintado",&#xd;            "bruto":"$bruto",&#xd;            "tara":"$tara",&#xd;            "ticket":"$ticket",&#xd;            "resultado":"$resultado",&#xd;            "cant_fajas":"$cant_fajas",&#xd;            "bruto_reprecintado":"$bruto_reprecintado",&#xd;            "ticket_reprecintado":"$ticket_reprecintado",&#xd;            "fec_alta":"$fec_alta",&#xd;            "usuario":"$usuario",&#xd;            "usuario_app":"$usuario_app",&#xd;            "petr_id":"$petr_id",&#xd;            "chof_id":"$chof_id",&#xd;            "chofer":"$chofer",&#xd;            "inca_id":"$inca_id",&#xd;            "foto_infraccion_calle":"$foto_infraccion_calle",&#xd;            "observaciones":"$observaciones",&#xd;            "info_id_doc":"$info_id_doc",&#xd;            "@getPermisosTransito":"$case_id-&gt;case_id",&#xd;            "@getInfracciones":"$case_id-&gt;case_id",&#xd;            "@getEmpresasInspeccion":"$case_id-&gt;case_id",&#xd;            "@getTermicosInspeccion":"$case_id-&gt;case_id",&#xd;            "@getDocumentosInspeccion":"$case_id-&gt;case_id"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="fec_desde" sqlType="STRING"/>
      <param name="fec_hasta" sqlType="STRING"/>
   </query>
   <query id="getDocumentosInspeccion" useConfig="SICPOADataSource">
      <sql>select&#xd;	d.num_documento,&#xd;	d.tido_id ,&#xd;	t.descripcion tipo_documento,&#xd;	e.cuit ,&#xd;	e.razon_social,&#xd;	to_char(d.fec_emision,'YYYY-MM-DD') fec_emision,&#xd;	e2.cuit cuit_destino,&#xd;	e2.razon_social razon_social_destino,&#xd;	sum((dd.precio_unitario * dd.cantidad)-(dd.precio_unitario * dd.cantidad * dd.descuento )) monto, &#xd;        d.imag_id&#xd;from&#xd;	sicpoa.documentos d &#xd;	left join sicpoa.detalles_documento dd &#xd;		on dd.docu_id = d.num_documento &#xd;		and dd.tido_id = d.tido_id,&#xd;	sicpoa.empresas e ,&#xd;	sicpoa.empresas e2,&#xd;	core.tablas t&#xd;where&#xd;	d.case_id = cast(:case_id as integer)&#xd;	and d.empr_id_destino = e2.cuit&#xd;	and d.empr_id_emisor = e.cuit&#xd;    and d.eliminado = false&#xd;    and d.tido_id = t.tabl_id &#xd;group by&#xd;	1,2,3,4,5,6,7,8</sql>
      <result outputType="json">{&#xd;   "documentos":{&#xd;      "documento":[&#xd;         {&#xd;            "num_documento":"$num_documento",&#xd;            "tido_id":"$tido_id",&#xd;            "tipo_documento":"$tipo_documento",&#xd;            "cuit":"$cuit",&#xd;            "razon_social":"$razon_social",&#xd;            "cuit_destino":"$cuit_destino",&#xd;            "razon_social_destino":"$razon_social_destino",&#xd;            "fec_emision":"$fec_emision",&#xd;            "monto":"$monto",&#xd;            "imag_id":"$imag_id",&#xd;            "@getDetallesDocumento":"$docu_id-&gt;num_documento"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="getDetallesDocumento" useConfig="SICPOADataSource">
      <sql>select&#xd;	dd.dedo_id ,&#xd;	dd.cantidad,&#xd;	t2.tabl_id tipo_producto_id,&#xd;	t2.descripcion tipo_producto,&#xd;	t.tabl_id unidad_medida_id,&#xd;	t.descripcion unidad_medida,&#xd;	dd.descuento ,&#xd;	dd.precio_unitario ,&#xd;        dd.unidades,&#xd;	((dd.cantidad * dd.precio_unitario )-(dd.cantidad * dd.precio_unitario * dd.descuento )) monto&#xd;from&#xd;	sicpoa.detalles_documento dd ,&#xd;	core.tablas t ,&#xd;	core.tablas t2&#xd;where&#xd;	dd.docu_id = :docu_id&#xd;	and t.tabl_id = dd.unme_id&#xd;	and t2.tabl_id = dd.tipr_id&#xd;        and dd.eliminado = false</sql>
      <result outputType="json">{&#xd;   "detalles_documento":{&#xd;      "detalle_documento":[&#xd;         {&#xd;            "dedo_id":"$dedo_id",&#xd;            "cantidad":"$cantidad",&#xd;            "tipo_producto_id":"$tipo_producto_id",&#xd;            "tipo_producto":"$tipo_producto",&#xd;            "unidad_medida_id":"$unidad_medida_id",&#xd;            "unidad_medida":"$unidad_medida",&#xd;            "descuento":"$descuento",&#xd;            "precio_unitario":"$precio_unitario",&#xd;            "unidades":"$unidades",&#xd;            "monto":"$monto"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="docu_id" sqlType="STRING"/>
   </query>
   <query id="getImagenesPorFecha" useConfig="SICPOADataSource">
      <sql>select&#xd;   d.case_id &#xd;   ,d.imag_id &#xd;   ,if2.valor4_base64 imagen&#xd;from&#xd;	sicpoa.documentos d &#xd;	left join frm.instancias_formularios if2 on if2.inst_id = d.imag_id &#xd;where&#xd;	d.fec_alta between to_date(:fec_desde,'YYYY-MM-DD') and TO_DATE(:fec_hasta,'YYYY-MM-DD')</sql>
      <result outputType="json">{&#xd;   "imagenes_documentos":{&#xd;      "imagenes_documento":[&#xd;         {&#xd;            "imag_id":"$imag_id",&#xd;            "imagen":"$imagen",&#xd;            "case_id":"$case_id"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="fec_desde" sqlType="STRING"/>
      <param name="fec_hasta" sqlType="STRING"/>
   </query>
   <query id="deleteImgFormsPorFecha" useConfig="SICPOADataSource">
      <sql>delete from frm.instancias_formularios where info_id in &#xd;(select&#xd;   distinct(if2.info_id) &#xd;from&#xd;	sicpoa.documentos d &#xd;    join frm.instancias_formularios if2 on if2.inst_id = d.imag_id &#xd;where&#xd;	d.fec_alta between to_date(:fec_desde,'YYYY-MM-DD') and TO_DATE(:fec_hasta,'YYYY-MM-DD'))</sql>
      <param name="fec_desde" sqlType="STRING"/>
      <param name="fec_hasta" sqlType="STRING"/>
   </query>
   <query id="setDocumento" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.documentos (num_documento,&#xd;	fec_emision,&#xd;	usuario_app,&#xd;	tido_id,&#xd;	imag_id,&#xd;	empr_id_emisor,&#xd;	empr_id_destino,&#xd;	case_id)&#xd;values(:num_documento,&#xd;	to_timestamp(:fec_emision,'YYYY-MM-DD'),&#xd;	:usuario_app,&#xd;	:tido_id,&#xd;	cast(:imag_id as integer),&#xd;	:empr_id_emisor,&#xd;	:empr_id_destino,&#xd;	cast(:case_id as integer));</sql>
      <param name="num_documento" sqlType="STRING"/>
      <param name="fec_emision" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="tido_id" sqlType="STRING"/>
      <param name="imag_id" sqlType="STRING"/>
      <param name="empr_id_emisor" sqlType="STRING"/>
      <param name="empr_id_destino" sqlType="STRING"/>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="setDetalleDocumento" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.detalles_documento (cantidad,&#xd;	precio_unitario,&#xd;	descuento,&#xd;        unidades,&#xd;	usuario_app,&#xd;	docu_id,&#xd;	tido_id,&#xd;	tipr_id,&#xd;	unme_id)&#xd;values(cast (:cantidad as float),&#xd;	case when :precio_unitario is null or :precio_unitario = '' then null else cast (:precio_unitario as float) END,&#xd;	case when :descuento IS NULL OR :descuento = '' then null ELSE CAST ( :descuento AS FLOAT ) END,&#xd;    cast (:unidades as integer),&#xd;	:usuario_app,&#xd;	:docu_id,&#xd;	:tido_id,&#xd;	:tipr_id,&#xd;	:unme_id)&#xd;returning dedo_id;</sql>
      <result outputType="json">{"respuesta":{"dedo_id":"$dedo_id"}}</result>
      <param name="cantidad" sqlType="STRING"/>
      <param name="precio_unitario" sqlType="STRING"/>
      <param name="descuento" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="docu_id" sqlType="STRING"/>
      <param name="tido_id" sqlType="STRING"/>
      <param name="tipr_id" sqlType="STRING"/>
      <param name="unme_id" sqlType="STRING"/>
      <param name="unidades" sqlType="STRING"/>
   </query>
   <query id="setDetalleDocumentoBatchReq" useConfig="SICPOADataSource">
      <sql>insert&#xd;	into&#xd;	sicpoa.detalles_documento (cantidad,&#xd;	precio_unitario,&#xd;	descuento,&#xd;    unidades,&#xd;	usuario_app,&#xd;	docu_id,&#xd;	tido_id,&#xd;	tipr_id,&#xd;	unme_id)&#xd;select &#xd;	cast (:cantidad as float),&#xd;	case when param.precio_unitario is null or param.precio_unitario = '' then null else cast (param.precio_unitario as float) END,&#xd;	case when param.descuento IS NULL OR param.descuento = '' then null ELSE CAST ( param.descuento as float) end,&#xd;	cast (:unidades as integer),&#xd;	:usuario_app,&#xd;	:docu_id,&#xd;	:tido_id,&#xd;	:tipr_id,&#xd;	:unme_id&#xd;from (&#xd;select :precio_unitario precio_unitario,&#xd;:descuento descuento) param</sql>
      <param name="cantidad" sqlType="STRING"/>
      <param name="precio_unitario" sqlType="STRING"/>
      <param name="descuento" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="docu_id" sqlType="STRING"/>
      <param name="tido_id" sqlType="STRING"/>
      <param name="tipr_id" sqlType="STRING"/>
      <param name="unme_id" sqlType="STRING"/>
      <param name="unidades" sqlType="STRING"/>
   </query>
   <query id="updateDocumento" useConfig="SICPOADataSource">
      <sql>update&#xd;	sicpoa.documentos&#xd;set&#xd;	fec_emision = to_timestamp(:fec_emision,'YYYY-MM-DD') ,&#xd;	usuario_app = :usuario_app,&#xd;	imag_id = cast(:imag_id as integer),&#xd;	empr_id_emisor = :empr_id_emisor,&#xd;	empr_id_destino = :empr_id_destino&#xd;where&#xd;	num_documento = :num_documento &#xd;	and tido_id = :tido_id ;</sql>
      <param name="fec_emision" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="imag_id" sqlType="STRING"/>
      <param name="empr_id_emisor" sqlType="STRING"/>
      <param name="empr_id_destino" sqlType="STRING"/>
      <param name="num_documento" sqlType="STRING"/>
      <param name="tido_id" sqlType="STRING"/>
   </query>
   <query id="updateDetalleDocumento" useConfig="SICPOADataSource">
      <sql>update&#xd;	sicpoa.detalles_documento&#xd;set&#xd;	cantidad = cast(:cantidad as float),&#xd;	precio_unitario =cast(:precio_unitario as float),&#xd;	descuento = cast(:descuento as float),&#xd;	usuario_app = :usuario_app ,&#xd;	tipr_id = :tipr_id,&#xd;	unme_id = :unme_id,&#xd;        unidades = cast(:unidades as integer)&#xd;where&#xd;	dedo_id = cast(:dedo_id as integer)</sql>
      <param name="cantidad" sqlType="STRING"/>
      <param name="precio_unitario" sqlType="STRING"/>
      <param name="descuento" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="tipr_id" sqlType="STRING"/>
      <param name="unme_id" sqlType="STRING"/>
      <param name="dedo_id" sqlType="STRING"/>
      <param name="unidades" sqlType="STRING"/>
   </query>
   <query id="deleteDocumento" useConfig="SICPOADataSource">
      <sql>update&#xd;	sicpoa.documentos&#xd;set eliminado = true&#xd;where&#xd;	num_documento = :num_documento &#xd;	and tido_id = :tido_id ;</sql>
      <param name="num_documento" sqlType="STRING"/>
      <param name="tido_id" sqlType="STRING"/>
   </query>
   <query id="deleteDetalleDocumento" useConfig="SICPOADataSource">
      <sql>update&#xd;	sicpoa.detalles_documento&#xd;set eliminado = true&#xd;where&#xd;	dedo_id = cast(:dedo_id as integer)</sql>
      <param name="dedo_id" sqlType="STRING"/>
   </query>
   <query id="getInspeccionAvanzada" useConfig="SICPOADataSource">
      <sql>select&#xd;	i.case_id ,&#xd;	I.fec_alta ,&#xd;	(I.bruto - I.tara) as neto ,&#xd;	CH.nombre ,&#xd;	(&#xd;		select&#xd;			string_agg(T.patente, ', ')&#xd;		from&#xd;			sicpoa.inspecciones_termicos IT,&#xd;			sicpoa.termicos T&#xd;		where&#xd;			I.case_id = IT.case_id&#xd;			and IT.term_id = T.patente) termicos,&#xd;	I.resultado ,&#xd;	ieo.empr_id as cuit_origen,&#xd;	eo.razon_social razon_social_origen,&#xd;	(&#xd;		select&#xd;			string_agg(concat(&#xd;                  e.razon_social,&#xd;                  ' (', ied.empr_id, ')'&#xd;			           , case&#xd;                    when ied.depo_id is not null&#xd;                    then concat(' - '&#xd;                                , d.calle , ' '&#xd;                                , d.altura , ' '&#xd;                                , t.valor)&#xd;			              else ''&#xd;                  end)&#xd;			            , ', ')&#xd;		from&#xd;			sicpoa.inspecciones_empresas ied&#xd;		left join sicpoa.depositos d on	d.depo_id = ied.depo_id&#xd;		left join core.tablas t on tabl_id = d.depa_id ,&#xd;			sicpoa.empresas e&#xd;		where&#xd;			ied.case_id = i.case_id&#xd;			and ied.rol = 'DESTINO'&#xd;			and ied.empr_id = e.cuit) as destinos,&#xd;	iet.empr_id as cuit_transpote,&#xd;	et.razon_social razon_social_transporte,&#xd;	( select string_agg( t.descripcion ,', ')&#xd;	  from sicpoa.documentos d&#xd;	  ,sicpoa.detalles_documento dd &#xd;	  ,core.tablas t&#xd;	  where dd.docu_id = d.num_documento &#xd;	  and dd.tido_id = d.tido_id&#xd;	  and t.tabl_id = dd.tipr_id&#xd;	  and d.case_id =i.case_id ) tipos_productos&#xd;from&#xd;	sicpoa.inspecciones I&#xd;left join sicpoa.inspecciones_empresas ieo on&#xd;	ieo.case_id = i.case_id&#xd;	and ieo.rol = 'ORIGEN'	&#xd;left join sicpoa.empresas eo on&#xd;	eo.cuit = ieo.empr_id&#xd;left join sicpoa.inspecciones_empresas iet on&#xd;	iet.case_id = i.case_id&#xd;	and iet.rol = 'TRANSPORTISTA'	&#xd;left join sicpoa.empresas et on&#xd;	et.cuit = iet.empr_id ,&#xd;	sicpoa.choferes CH&#xd;  , (select :cuit_origen cuit_origen, :cuit_destino cuit_destino, :cuit_transporte cuit_transporte, :resultado resultado, :tipo_producto tipo_producto ) param&#xd;where&#xd;	I.chof_id = CH.dni&#xd;	and date_trunc('day',i.fec_alta) between to_date(:fec_desde,'YYYY-MM-DD') and to_date(:fec_hasta,'YYYY-MM-DD')&#xd;	and (param.resultado = 'TODOS' or param.resultado = i.resultado)&#xd;  and (param.tipo_producto = 'TODOS' or param.tipo_producto in (select dd.tipr_id&#xd;                                                                  from sicpoa.documentos d&#xd;                                                                  ,sicpoa.detalles_documento dd&#xd;                                                                  where dd.docu_id = d.num_documento&#xd;                                                                  and dd.tido_id = d.tido_id ))&#xd;	and (param.cuit_origen = 'TODOS' or param.cuit_origen = ieo.empr_id)&#xd;	and (param.cuit_destino = 'TODOS' or param.cuit_destino in (select ie.empr_id&#xd;                                                                from sicpoa.inspecciones_empresas ie&#xd;                                                                where ie.case_id = i.case_id&#xd;                                                                and ie.rol='DESTINO'))&#xd;	and (param.cuit_transporte = 'TODOS' or param.cuit_transporte = iet.empr_id )</sql>
      <result outputType="json">{&#xd;  "inspecciones": {&#xd;      "inspeccion": [&#xd;          {&#xd;          "case_id": "$case_id",&#xd;          "fec_alta": "$fec_alta",&#xd;          "neto": "$neto",&#xd;          "nombre": "$nombre",&#xd;          "termicos": "$termicos",&#xd;          "resultado": "$resultado",&#xd;          "cuit_origen": "$cuit_origen",&#xd;          "razon_social_origen": "$razon_social_origen",&#xd;          "destinos": "$destinos",&#xd;          "cuit_transpote": "$cuit_transpote",&#xd;          "razon_social_transporte": "$razon_social_transporte",&#xd;          "tipos_productos": "$tipos_productos"&#xd;          }&#xd;      ]&#xd;      }&#xd;}</result>
      <param name="cuit_origen" sqlType="STRING"/>
      <param name="cuit_destino" sqlType="STRING"/>
      <param name="cuit_transporte" sqlType="STRING"/>
      <param name="resultado" sqlType="STRING"/>
      <param name="tipo_producto" sqlType="STRING"/>
      <param name="fec_desde" sqlType="STRING"/>
      <param name="fec_hasta" sqlType="STRING"/>
   </query>
   <query id="setDetalleInfraccion" useConfig="SICPOADataSource">
      <sql>insert into sicpoa.deta_infracciones(&#xd;	case_id,&#xd;	tiin_id,&#xd;	usuario_app)&#xd;values(&#xd;	cast(:case_id as integer),&#xd;	:tiin_id,&#xd;	:usuario_app&#xd;);</sql>
      <param name="case_id" sqlType="STRING"/>
      <param name="tiin_id" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
   </query>
   <query id="getDetalleInfraccion" useConfig="SICPOADataSource">
      <sql>select &#xd;di.tiin_id,&#xd;t.descripcion,&#xd;t.valor,&#xd;di.usuario_app&#xd;from sicpoa.deta_infracciones di &#xd;left join core.tablas t on di.tiin_id = t.tabl_id &#xd;where di.case_id = cast (:case_id as integer)</sql>
      <result outputType="json">{&#xd;    "detalleInfracciones":{&#xd;       "detalleInfraccion":[&#xd;          {&#xd;            "tiin_id":"$tiin_id",&#xd;            "descripcion":"$descripcion",&#xd;            "valor":"$valor",&#xd;            "usuario_app":"$usuario_app"&#xd;          }&#xd;       ]&#xd;    }&#xd; }</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <resource method="POST" path="/inspeccion">
      <call-query href="setInspeccion">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="patente_tractor" query-param="patente_tractor"/>
         <with-param name="nro_senasa" query-param="nro_senasa"/>
         <with-param name="productos" query-param="productos"/>
         <with-param name="reprecintado" query-param="reprecintado"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="ticket" query-param="ticket"/>
         <with-param name="resultado" query-param="resultado"/>
         <with-param name="cant_fajas" query-param="cant_fajas"/>
         <with-param name="bruto_reprecintado" query-param="bruto_reprecintado"/>
         <with-param name="ticket_reprecintado" query-param="ticket_reprecintado"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="petr_id" query-param="petr_id"/>
         <with-param name="chof_id" query-param="chof_id"/>
         <with-param name="inca_id" query-param="inca_id"/>
         <with-param name="observaciones" query-param="observaciones"/>
         <with-param name="info_id_doc" query-param="info_id_doc"/>
         <with-param name="tel_transportista" query-param="tel_transportista"/>
         <with-param name="email_transportista" query-param="email_transportista"/>
         <with-param name="se_constituye" query-param="se_constituye"/>
         <with-param name="domicilio_constituye" query-param="domicilio_constituye"/>
         <with-param name="propiedad_de" query-param="propiedad_de"/>
         <with-param name="atendidos_por" query-param="atendidos_por"/>
         <with-param name="caracter_de" query-param="caracter_de"/>
         <with-param name="proceden_a" query-param="proceden_a"/>
         <with-param name="departamento" query-param="departamento"/>
         <with-param name="localidad" query-param="localidad"/>
         <with-param name="inspectores&#x9;&#x9;" query-param="inspectores&#x9;&#x9;"/>
      </call-query>
   </resource>
   <resource method="GET" path="/inspeccion/id/{case_id}">
      <call-query href="getInspeccion">
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/inspeccion/infraccion">
      <call-query href="setInfraccionInspeccion">
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="depositario" query-param="depositario"/>
         <with-param name="documento" query-param="documento"/>
         <with-param name="domicilio_legal" query-param="domicilio_legal"/>
         <with-param name="domicilio_comercial" query-param="domicilio_comercial"/>
         <with-param name="telefono" query-param="telefono"/>
         <with-param name="email" query-param="email"/>
         <with-param name="detalle_infraccion" query-param="detalle_infraccion"/>
         <with-param name="caracteristicas_organolepticas" query-param="caracteristicas_organolepticas"/>
         <with-param name="caracteristicas_deposito" query-param="caracteristicas_deposito"/>
         <with-param name="tipo_camara" query-param="tipo_camara"/>
         <with-param name="temperatura_actual" query-param="temperatura_actual"/>
         <with-param name="fecha_hora" query-param="fecha_hora"/>
      </call-query>
   </resource>
   <resource method="POST" path="/inspeccion/permiso">
      <call-query href="setPermisosInspeccion">
         <with-param name="perm_id" query-param="perm_id"/>
         <with-param name="lugar_emision" query-param="lugar_emision"/>
         <with-param name="fecha_hora_salida" query-param="fecha_hora_salida"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="soli_num" query-param="soli_num"/>
         <with-param name="origen" query-param="origen"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="temperatura" query-param="temperatura"/>
         <with-param name="productos" query-param="productos"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/inspeccion/permiso">
      <call-query href="deletePermisoInspeccion">
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/inspeccion/empresa">
      <call-query href="setEmpresaInspeccion">
         <with-param name="rol" query-param="rol"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="depo_id" query-param="depo_id"/>
         <with-param name="productos" query-param="productos"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/inspeccion/empresa">
      <call-query href="deleteEmpresaInspeccion">
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/inspeccion/termico">
      <call-query href="setTermicoInspeccion">
         <with-param name="nro_senasa" query-param="nro_senasa"/>
         <with-param name="precintos" query-param="precintos"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="term_id" query-param="term_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/chofer/dni/{chof_id}">
      <call-query href="getChofer">
         <with-param name="chof_id" query-param="chof_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/empresas/patron/{patron}">
      <call-query href="getEmpresasXPatron">
         <with-param name="patron" query-param="patron"/>
      </call-query>
   </resource>
   <resource method="GET" path="/empresa/cuit/{cuit}">
      <call-query href="getEmpresa">
         <with-param name="cuit" query-param="cuit"/>
      </call-query>
   </resource>
   <resource method="GET" path="/choferes/patron/{patron}">
      <call-query href="getChoferesXPatron">
         <with-param name="patron" query-param="patron"/>
      </call-query>
   </resource>
   <resource method="POST" path="/deposito/empresa">
      <call-query href="setDepositoEmpresa">
         <with-param name="calle" query-param="calle"/>
         <with-param name="altura" query-param="altura"/>
         <with-param name="depa_id" query-param="depa_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/depositos/empresa/{empr_id}">
      <call-query href="getDepositoXEmpresa">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/inspeccion/termico">
      <call-query href="deleteTermicoInspeccion">
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/chofer">
      <call-query href="setChofer">
         <with-param name="dni" query-param="dni"/>
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
      </call-query>
   </resource>
   <resource method="POST" path="/empresa">
      <call-query href="setEmpresa">
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="razon_social" query-param="razon_social"/>
         <with-param name="num_establecimiento" query-param="num_establecimiento"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
      </call-query>
   </resource>
   <resource method="POST" path="/termico">
      <call-query href="setTermico">
         <with-param name="patente" query-param="patente"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
      </call-query>
   </resource>
   <resource method="GET" path="/inspecciones/fec_desde/{fec_desde}/fec_hasta/{fec_hasta}">
      <call-query href="getInspeccionesXFecha">
         <with-param name="fec_desde" query-param="fec_desde"/>
         <with-param name="fec_hasta" query-param="fec_hasta"/>
      </call-query>
   </resource>
   <resource method="GET" path="/documentos/imagenes/fec_desde/{fec_desde}/fec_hasta/{fec_hasta}">
      <call-query href="getImagenesPorFecha">
         <with-param name="fec_desde" query-param="fec_desde"/>
         <with-param name="fec_hasta" query-param="fec_hasta"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/documentos/imagenes">
      <call-query href="deleteImgFormsPorFecha">
         <with-param name="fec_desde" query-param="fec_desde"/>
         <with-param name="fec_hasta" query-param="fec_hasta"/>
      </call-query>
   </resource>
   <resource method="POST" path="/documento">
      <call-query href="setDocumento">
         <with-param name="num_documento" query-param="num_documento"/>
         <with-param name="fec_emision" query-param="fec_emision"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="tido_id" query-param="tido_id"/>
         <with-param name="imag_id" query-param="imag_id"/>
         <with-param name="empr_id_emisor" query-param="empr_id_emisor"/>
         <with-param name="empr_id_destino" query-param="empr_id_destino"/>
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/documento/detalle">
      <call-query href="setDetalleDocumento">
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="precio_unitario" query-param="precio_unitario"/>
         <with-param name="descuento" query-param="descuento"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="docu_id" query-param="docu_id"/>
         <with-param name="tido_id" query-param="tido_id"/>
         <with-param name="tipr_id" query-param="tipr_id"/>
         <with-param name="unme_id" query-param="unme_id"/>
         <with-param name="unidades" query-param="unidades"/>
      </call-query>
   </resource>
   <resource method="POST" path="/docdetlist">
      <call-query href="setDetalleDocumentoBatchReq">
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="precio_unitario" query-param="precio_unitario"/>
         <with-param name="descuento" query-param="descuento"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="docu_id" query-param="docu_id"/>
         <with-param name="tido_id" query-param="tido_id"/>
         <with-param name="tipr_id" query-param="tipr_id"/>
         <with-param name="unme_id" query-param="unme_id"/>
         <with-param name="unidades" query-param="unidades"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/documento">
      <call-query href="updateDocumento">
         <with-param name="fec_emision" query-param="fec_emision"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="imag_id" query-param="imag_id"/>
         <with-param name="empr_id_emisor" query-param="empr_id_emisor"/>
         <with-param name="empr_id_destino" query-param="empr_id_destino"/>
         <with-param name="num_documento" query-param="num_documento"/>
         <with-param name="tido_id" query-param="tido_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/documento/detalle">
      <call-query href="updateDetalleDocumento">
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="precio_unitario" query-param="precio_unitario"/>
         <with-param name="descuento" query-param="descuento"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="tipr_id" query-param="tipr_id"/>
         <with-param name="unme_id" query-param="unme_id"/>
         <with-param name="dedo_id" query-param="dedo_id"/>
         <with-param name="unidades" query-param="unidades"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/documento">
      <call-query href="deleteDocumento">
         <with-param name="num_documento" query-param="num_documento"/>
         <with-param name="tido_id" query-param="tido_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/documento/detalle">
      <call-query href="deleteDetalleDocumento">
         <with-param name="dedo_id" query-param="dedo_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/inspecciones/avanzado/desde/{fec_desde}/hasta/{fec_hasta}/origen/{cuit_origen}/destino/{cuit_destino}/resultado/{resultado}/producto/{tipo_producto}">
      <call-query href="getInspeccionAvanzada">
         <with-param name="cuit_origen" query-param="cuit_origen"/>
         <with-param name="cuit_destino" query-param="cuit_destino"/>
         <with-param name="cuit_transporte" query-param="cuit_transporte"/>
         <with-param name="resultado" query-param="resultado"/>
         <with-param name="tipo_producto" query-param="tipo_producto"/>
         <with-param name="fec_desde" query-param="fec_desde"/>
         <with-param name="fec_hasta" query-param="fec_hasta"/>
      </call-query>
   </resource>
   <resource method="GET" path="/inspecciones/avanzado/desde/{fec_desde}/hasta/{fec_hasta}/origen/{cuit_origen}/destino/{cuit_destino}/transporte/{cuit_transporte}/resultado/resultado/producto/tipo_producto">
      <call-query href="getInspeccionAvanzada">
         <with-param name="cuit_origen" query-param="cuit_origen"/>
         <with-param name="cuit_destino" query-param="cuit_destino"/>
         <with-param name="cuit_transporte" query-param="cuit_transporte"/>
         <with-param name="resultado" query-param="resultado"/>
         <with-param name="tipo_producto" query-param="tipo_producto"/>
         <with-param name="fec_desde" query-param="fec_desde"/>
         <with-param name="fec_hasta" query-param="fec_hasta"/>
      </call-query>
   </resource>
   <resource method="GET" path="/inspecciones/avanzado/desde/{fec_desde}/hasta/{fec_hasta}/origen/{cuit_origen}/destino/{cuit_destino}/transporte/{cuit_transporte}/resultado/{resultado}/producto/{tipo_producto}">
      <call-query href="getInspeccionAvanzada">
         <with-param name="cuit_origen" query-param="cuit_origen"/>
         <with-param name="cuit_destino" query-param="cuit_destino"/>
         <with-param name="cuit_transporte" query-param="cuit_transporte"/>
         <with-param name="resultado" query-param="resultado"/>
         <with-param name="tipo_producto" query-param="tipo_producto"/>
         <with-param name="fec_desde" query-param="fec_desde"/>
         <with-param name="fec_hasta" query-param="fec_hasta"/>
      </call-query>
   </resource>
   <resource method="POST" path="/inspeccion/infraccion/detalle">
      <call-query href="setDetalleInfraccion">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="tiin_id" query-param="tiin_id"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
      </call-query>
   </resource>
</data>
